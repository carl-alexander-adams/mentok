#
# Tool chain neutral 
#


#
# Gnu tool chain
#
ifeq ($(BIN_GNU_CC),)
BIN_GNU_CC=/tools/bin/gcc
endif
ifeq ($(BIN_GNU_CXX),)
BIN_GNU_CXX=/tools/bin/g++
endif
ifeq ($(BIN_GNU_AS),)
BIN_GNU_AS=/tools/bin/gcc
endif
ifeq ($(BIN_GNU_CPP),)
BIN_GNU_CPP=/tools/bin/gcc -E
endif
ifeq ($(BIN_GNU_LD),)
BIN_GNU_LD=/tools/bin/gcc
endif
ifeq ($(BIN_GNU_AR),)
BIN_GNU_AR=/tools/bin/ar
endif
ifeq ($(BIN_GNU_STRIP),)
BIN_GNU_STRIP=/tools/bin/strip
endif




ifeq ($(FLAGS_GNU_CC),)
#FLAGS_GNU_CC=-W \
#	-Wall \
#	-Wcast-qual \
#	-Wcast-align \
#	-Wpointer-arith \
#	-Wsign-compare \
#	-Winline \
#	-Waggregate-return \
#	-Wmissing-prototypes \
#	-Wmissing-declarations \
#	-Wunused

#	-v \
#	-ftime-report \
#	-fmem-report

endif
ifeq ($(FLAGS_GNU_CC_DEP),)
FLAGS_GNU_CC_DEP=-MM
endif
ifeq ($(FLAGS_GNU_CC_DBG),)
FLAGS_GNU_CC_DBG=-g3
endif
ifeq ($(FLAGS_GNU_CC_OPT),)
FLAGS_GNU_CC_OPT=-O3
endif
ifeq ($(FLAGS_GNU_CC_PROFILE),)
FLAGS_GNU_CC_PROFILE=-pg
endif
ifeq ($(FLAGS_GNU_CC_COV),)
FLAGS_GNU_CC_COV=-fprofile-arcs -ftest-coverage
endif
ifeq ($(FLAGS_GNU_CC_NOASSERT),)
FLAGS_GNU_CC_NOASSERT=-DNDEBUG
endif
ifeq ($(FLAGS_GNU_CC_REENT),)
FLAGS_GNU_CC_REENT=-D_REENTRANT
endif


ifeq ($(FLAGS_GNU_CXX),)
FLAGS_GNU_CXX=-W \
	-Wall \
	-Wcast-qual \
	-Wcast-align \
	-Wpointer-arith \
	-Wsign-compare \
	-Winline \
	-Wmissing-prototypes \
	-Wunused
#	-v \
#	-ftime-report \
#	-fmem-report

endif
ifeq ($(FLAGS_GNU_CXX_DEP),)
FLAGS_GNU_CXX_DEP=-MM
endif
ifeq ($(FLAGS_GNU_CXX_DBG),)
FLAGS_GNU_CXX_DBG=-g3
endif
ifeq ($(FLAGS_GNU_CXX_OPT),)
FLAGS_GNU_CXX_OPT=-O3
endif
ifeq ($(FLAGS_GNU_CXX_PROFILE),)
FLAGS_GNU_CXX_PROFILE=-pg
endif
ifeq ($(FLAGS_GNU_CXX_COV),)
FLAGS_GNU_CXX_COV=-fprofile-arcs -ftest-coverage
endif
ifeq ($(FLAGS_GNU_CXX_NOASSERT),)
FLAGS_GNU_CXX_NOASSERT=-DNDEBUG
endif
ifeq ($(FLAGS_GNU_CXX_REENT),)
FLAGS_GNU_CXX_REENT=-D_REENTRANT
endif


ifeq ($(FLAGS_GNU_AS),)
FLAGS_GNU_AS=
endif
ifeq ($(FLAGS_GNU_AS_DEP),)
FLAGS_GNU_AS_DEP=-MM
endif
ifeq ($(FLAGS_GNU_AS_DBG),)
FLAGS_GNU_AS_DBG=-g3
endif
ifeq ($(FLAGS_GNU_AS_OPT),)
FLAGS_GNU_AS_OPT=-O3
endif
ifeq ($(FLAGS_GNU_AS_PROFILE),)
FLAGS_GNU_AS_PROFILE=
endif
ifeq ($(FLAGS_GNU_AS_COV),)
FLAGS_GNU_AS_COV=
endif



ifeq ($(FLAGS_GNU_LD_EXE),)
FLAGS_GNU_LD_EXE=
endif
ifeq ($(FLAGS_GNU_LD_EXE_OPT),)
FLAGS_GNU_LD_EXE_OPT=
endif
ifeq ($(FLAGS_GNU_LD_EXE_DBG),)
FLAGS_GNU_LD_EXE_DBG=
endif
ifeq ($(FLAGS_GNU_LD_EXE_PROFILE),)
FLAGS_GNU_LD_EXE_PROFILE=-pg -ldl
endif
ifeq ($(FLAGS_GNU_LD_EXE_COV),)
FLAGS_GNU_LD_EXE_COV=
endif
ifeq ($(FLAGS_GNU_LD_EXE_LOADLIBS),)
FLAGS_GNU_LD_EXE_LOADLIBS=
endif
ifeq ($(FLAGS_GNU_LD_EXE_LOADLIBS_OPT),)
FLAGS_GNU_LD_EXE_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_GNU_LD_EXE_LOADLIBS_DBG),)
FLAGS_GNU_LD_EXE_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_GNU_LD_EXE_LOADLIBS_PROFILE),)
FLAGS_GNU_LD_EXE_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_GNU_LD_EXE_LOADLIBS_COV),)
FLAGS_GNU_LD_EXE_LOADLIBS_COV=
endif


ifeq ($(FLAGS_GNU_LD_SHLIB),)
FLAGS_GNU_LD_SHLIB=-fPIC -G -dy
endif
ifeq ($(FLAGS_GNU_LD_SHLIB_OPT),)
FLAGS_GNU_LD_SHLIB_OPT=
endif
ifeq ($(FLAGS_GNU_LD_SHLIB_DBG),)
FLAGS_GNU_LD_SHLIB_DBG=
endif
ifeq ($(FLAGS_GNU_LD_SHLIB_PROFILE),)
FLAGS_GNU_LD_SHLIB_PROFILE=
endif
ifeq ($(FLAGS_GNU_LD_SHLIB_COV),)
FLAGS_GNU_LD_SHLIB_COV=
endif
ifeq ($(FLAGS_GNU_LD_SHLIB_LOADLIBS),)
FLAGS_GNU_LD_SHLIB_LOADLIBS=
endif
ifeq ($(FLAGS_GNU_LD_SHLIB_LOADLIBS_OPT),)
FLAGS_GNU_LD_SHLIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_GNU_LD_SHLIB_LOADLIBS_DBG),)
FLAGS_GNU_LD_SHLIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_GNU_LD_SHLIB_LOADLIBS_PROFILE),)
FLAGS_GNU_LD_SHLIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_GNU_LD_SHLIB_LOADLIBS_COV),)
FLAGS_GNU_LD_SHLIB_LOADLIBS_COV=
endif


ifeq ($(FLAGS_GNU_LD_INCOBJ),)
FLAGS_GNU_LD_INCOBJ=-Wl,-r
endif
ifeq ($(FLAGS_GNU_LD_INCOBJ_OPT),)
FLAGS_GNU_LD_INCOBJ_OPT=
endif
ifeq ($(FLAGS_GNU_LD_INCOBJ_DBG),)
FLAGS_GNU_LD_INCOBJ_DBG=
endif
ifeq ($(FLAGS_GNU_LD_INCOBJ_PROFILE),)
FLAGS_GNU_LD_INCOBJ_PROFILE=
endif
ifeq ($(FLAGS_GNU_LD_INCOBJ_COV),)
FLAGS_GNU_LD_INCOBJ_COV=
endif
ifeq ($(FLAGS_GNU_LD_INCOBJ_LOADLIBS),)
FLAGS_GNU_LD_INCOBJ_LOADLIBS=
endif
ifeq ($(FLAGS_GNU_LD_INCOBJ_LOADLIBS_OPT),)
FLAGS_GNU_LD_INCOBJ_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_GNU_LD_INCOBJ_LOADLIBS_DBG),)
FLAGS_GNU_LD_INCOBJ_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_GNU_LD_INCOBJ_LOADLIBS_PROFILE),)
FLAGS_GNU_LD_INCOBJ_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_GNU_LD_INCOBJ_LOADLIBS_COV),)
FLAGS_GNU_LD_INCOBJ_LOADLIBS_COV=
endif

ifeq ($(FLAGS_GNU_AR_LIB),)
FLAGS_GNU_AR_LIB=rc
endif
ifeq ($(FLAGS_GNU_AR_LIB_OPT),)
FLAGS_GNU_AR_LIB_OPT=
endif
ifeq ($(FLAGS_GNU_AR_LIB_DBG),)
FLAGS_GNU_AR_LIB_DBG=
endif
ifeq ($(FLAGS_GNU_AR_LIB_PROFILE),)
FLAGS_GNU_AR_LIB_PROFILE=
endif
ifeq ($(FLAGS_GNU_AR_LIB_COV),)
FLAGS_GNU_AR_LIB_COV=
endif
ifeq ($(FLAGS_GNU_AR_LIB_LOADLIBS),)
FLAGS_GNU_AR_LIB_LOADLIBS=
endif
ifeq ($(FLAGS_GNU_AR_LIB_LOADLIBS_OPT),)
FLAGS_GNU_AR_LIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_GNU_AR_LIB_LOADLIBS_DBG),)
FLAGS_GNU_AR_LIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_GNU_AR_LIB_LOADLIBS_PROFILE),)
FLAGS_GNU_AR_LIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_GNU_AR_LIB_LOADLIBS_COV),)
FLAGS_GNU_AR_LIB_LOADLIBS_COV=
endif



ifeq ($(FLAGS_GNU_STRIP_EXE),)
FLAGS_GNU_STRIP_EXE= --strip-unneeded
endif
ifeq ($(FLAGS_GNU_STRIP_SHLIB),)
FLAGS_GNU_STRIP_SHLIB= --discard-all
endif
ifeq ($(FLAGS_GNU_STRIP_LIB),)
FLAGS_GNU_STRIP_LIB= --discard-all
endif




#
# Vendor tool chain
#
ifeq ($(BIN_VENDOR_CC),)
BIN_VENDOR_CC=/opt/SUNWspro/bin/cc
endif
ifeq ($(BIN_VENDOR_CXX),)
BIN_VENDOR_CXX=/opt/SUNWspro/bin/CC
endif
ifeq ($(BIN_VENDOR_AS),)
BIN_VENDOR_AS=/opt/SUNWspro/bin/cc
endif
ifeq ($(BIN_VENDOR_CPP),)
BIN_VENDOR_CPP=/opt/SUNWspro/bin/cc -E
endif
ifeq ($(BIN_VENDOR_LD),)
BIN_VENDOR_LD=/usr/ccs/bin/ld
endif
ifeq ($(BIN_VENDOR_AR),)
BIN_VENDOR_AR=/usr/ccs/bin/ar
endif
ifeq ($(BIN_VENDOR_STRIP),)
BIN_VENDOR_STRIP=/usr/local/bin/strip
endif



ifeq ($(FLAGS_VENDOR_CC),)
FLAGS_VENDOR_CC=-errtags=yes
endif
ifeq ($(FLAGS_VENDOR_CC_DEP),)
FLAGS_VENDOR_CC_DEP=-xM1
endif
ifeq ($(FLAGS_VENDOR_CC_DBG),)
FLAGS_VENDOR_CC_DBG=-g
endif
ifeq ($(FLAGS_VENDOR_CC_OPT),)
FLAGS_VENDOR_CC_OPT=-O
endif
ifeq ($(FLAGS_VENDOR_CC_PROFILE),)
FLAGS_VENDOR_CC_PROFILE=-p
endif
ifeq ($(FLAGS_VENDOR_CC_COV),)
FLAGS_VENDOR_CC_COV=
endif
ifeq ($(FLAGS_VENDOR_CC_NOASSERT),)
FLAGS_VENDOR_CC_NOASSERT=-DNDEBUG
endif
ifeq ($(FLAGS_VENDOR_CC_REENT),)
FLAGS_VENDOR_CC_REENT=-D_REENTRANT
endif

ifeq ($(FLAGS_VENDOR_CXX),)
FLAGS_VENDOR_CXX=+w2
endif
ifeq ($(FLAGS_VENDOR_CXX_DEP),)
FLAGS_VENDOR_CXX_DEP=-xM1
endif
ifeq ($(FLAGS_VENDOR_CXX_DBG),)
FLAGS_VENDOR_CXX_DBG=-g
endif
ifeq ($(FLAGS_VENDOR_CXX_OPT),)
FLAGS_VENDOR_CXX_OPT=-O
endif
ifeq ($(FLAGS_VENDOR_CXX_PROFILE),)
FLAGS_VENDOR_CXX_PROFILE=-p
endif
ifeq ($(FLAGS_VENDOR_CXX_COV),)
FLAGS_VENDOR_CXX_COV=-p
endif
ifeq ($(FLAGS_VENDOR_CXX_NOASSERT),)
FLAGS_VENDOR_CXX_NOASSERT=-DNDEBUG
endif
ifeq ($(FLAGS_VENDOR_CXX_REENT),)
FLAGS_VENDOR_CXX_REENT=-D_REENTRANT
endif


ifeq ($(FLAGS_VENDOR_AS),)
FLAGS_VENDOR_AS=
endif
ifeq ($(FLAGS_VENDOR_AS_DEP),)
FLAGS_VENDOR_AS_DEP=-xM1
endif
ifeq ($(FLAGS_VENDOR_AS_DBG),)
FLAGS_VENDOR_AS_DBG=-g
endif
ifeq ($(FLAGS_VENDOR_AS_OPT),)
FLAGS_VENDOR_AS_OPT=-O
endif
ifeq ($(FLAGS_VENDOR_AS_PROFILE),)
FLAGS_VENDOR_AS_PROFILE=
endif
ifeq ($(FLAGS_VENDOR_AS_COV),)
FLAGS_VENDOR_AS_COV=
endif


ifeq ($(FLAGS_VENDOR_LD_EXE),)
FLAGS_VENDOR_LD_EXE=-lc
endif
ifeq ($(FLAGS_VENDOR_LD_EXE_OPT),)
FLAGS_VENDOR_LD_EXE_OPT=
endif
ifeq ($(FLAGS_VENDOR_LD_EXE_DBG),)
FLAGS_VENDOR_LD_EXE_DBG=
endif
ifeq ($(FLAGS_VENDOR_LD_EXE_PROFILE),)
FLAGS_VENDOR_LD_EXE_PROFILE=-L/usr/lib/libp  -lm
endif
ifeq ($(FLAGS_VENDOR_LD_EXE_COV),)
FLAGS_VENDOR_LD_EXE_COV=
endif
ifeq ($(FLAGS_VENDOR_LD_EXE_LOADLIBS),)
FLAGS_VENDOR_LD_EXE_LOADLIBS=
endif
ifeq ($(FLAGS_VENDOR_LD_EXE_LOADLIBS_OPT),)
FLAGS_VENDOR_LD_EXE_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_VENDOR_LD_EXE_LOADLIBS_DBG),)
FLAGS_VENDOR_LD_EXE_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_VENDOR_LD_EXE_LOADLIBS_PROFILE),)
FLAGS_VENDOR_LD_EXE_LOADLIBS_PROFILE=-L/usr/lib/libp -lm
endif
ifeq ($(FLAGS_VENDOR_LD_EXE_LOADLIBS_COV),)
FLAGS_VENDOR_LD_EXE_LOADLIBS_COV=
endif


ifeq ($(FLAGS_VENDOR_LD_SHLIB),)
FLAGS_VENDOR_LD_SHLIB=-fPIC -G -dy
endif
ifeq ($(FLAGS_VENDOR_LD_SHLIB_OPT),)
FLAGS_VENDOR_LD_SHLIB_OPT=
endif
ifeq ($(FLAGS_VENDOR_LD_SHLIB_DBG),)
FLAGS_VENDOR_LD_SHLIB_DBG=
endif
ifeq ($(FLAGS_VENDOR_LD_SHLIB_PROFILE),)
FLAGS_VENDOR_LD_SHLIB_PROFILE=
endif
ifeq ($(FLAGS_VENDOR_LD_SHLIB_COV),)
FLAGS_VENDOR_LD_SHLIB_COV=
endif
ifeq ($(FLAGS_VENDOR_LD_SHLIB_LOADLIBS),)
FLAGS_VENDOR_LD_SHLIB_LOADLIBS=
endif
ifeq ($(FLAGS_VENDOR_LD_SHLIB_LOADLIBS_OPT),)
FLAGS_VENDOR_LD_SHLIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_VENDOR_LD_SHLIB_LOADLIBS_DBG),)
FLAGS_VENDOR_LD_SHLIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_VENDOR_LD_SHLIB_LOADLIBS_PROFILE),)
FLAGS_VENDOR_LD_SHLIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_VENDOR_LD_SHLIB_LOADLIBS_COV),)
FLAGS_VENDOR_LD_SHLIB_LOADLIBS_COV=
endif


ifeq ($(FLAGS_VENDOR_LD_INCOBJ),)
FLAGS_VENDOR_LD_INCOBJ=-r
endif
ifeq ($(FLAGS_VENDOR_LD_INCOBJ_OPT),)
FLAGS_VENDOR_LD_INCOBJ_OPT=
endif
ifeq ($(FLAGS_VENDOR_LD_INCOBJ_DBG),)
FLAGS_VENDOR_LD_INCOBJ_DBG=
endif
ifeq ($(FLAGS_VENDOR_LD_INCOBJ_PROFILE),)
FLAGS_VENDOR_LD_INCOBJ_PROFILE=
endif
ifeq ($(FLAGS_VENDOR_LD_INCOBJ_COV),)
FLAGS_VENDOR_LD_INCOBJ_COV=
endif
ifeq ($(FLAGS_VENDOR_LD_INCOBJ_LOADLIBS),)
FLAGS_VENDOR_LD_INCOBJ_LOADLIBS=
endif
ifeq ($(FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_OPT),)
FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_DBG),)
FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_PROFILE),)
FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_COV),)
FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_COV=
endif

ifeq ($(FLAGS_VENDOR_AR_LIB),)
FLAGS_VENDOR_AR_LIB=rc
endif
ifeq ($(FLAGS_VENDOR_AR_LIB_OPT),)
FLAGS_VENDOR_AR_LIB_OPT=
endif
ifeq ($(FLAGS_VENDOR_AR_LIB_DBG),)
FLAGS_VENDOR_AR_LIB_DBG=
endif
ifeq ($(FLAGS_VENDOR_AR_LIB_PROFILE),)
FLAGS_VENDOR_AR_LIB_PROFILE=
endif
ifeq ($(FLAGS_VENDOR_AR_LIB_COV),)
FLAGS_VENDOR_AR_LIB_COV=
endif
ifeq ($(FLAGS_VENDOR_AR_LIB_LOADLIBS),)
FLAGS_VENDOR_AR_LIB_LOADLIBS=
endif
ifeq ($(FLAGS_VENDOR_AR_LIB_LOADLIBS_OPT),)
FLAGS_VENDOR_AR_LIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_VENDOR_AR_LIB_LOADLIBS_DBG),)
FLAGS_VENDOR_AR_LIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_VENDOR_AR_LIB_LOADLIBS_PROFILE),)
FLAGS_VENDOR_AR_LIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_VENDOR_AR_LIB_LOADLIBS_COV),)
FLAGS_VENDOR_AR_LIB_LOADLIBS_COV=
endif



ifeq ($(FLAGS_VENDOR_STRIP_EXE),)
FLAGS_VENDOR_STRIP_EXE=--strip-unneeded
endif
ifeq ($(FLAGS_VENDOR_STRIP_SHLIB),)
FLAGS_VENDOR_STRIP_SHLIB=--discard-all
endif
ifeq ($(FLAGS_VENDOR_STRIP_LIB),)
FLAGS_VENDOR_STRIP_LIB=--discard-all
endif

#
# Vendor tool chain with options for compiling Solaris kernel modules
#
ifeq ($(BIN_KERNMOD_CC),)
BIN_KERNMOD_CC = $(BIN_VENDOR_CC)
endif
ifeq ($(BIN_KERNMOD_CXX),)
# No C++ in kernel modules!
BIN_KERNMOD_CXX = $(BIN_FALSE)
endif
ifeq ($(BIN_KERNMOD_AS),)
BIN_KERNMOD_AS = $(BIN_VENDOR_AS)
endif
ifeq ($(BIN_KERNMOD_CPP),)
BIN_KERNMOD_CPP = $(BIN_VENDOR_CPP)
endif
ifeq ($(BIN_KERNMOD_LD),)
BIN_KERNMOD_LD = $(BIN_VENDOR_LD)
endif
ifeq ($(BIN_KERNMOD_AR),)
BIN_KERNMOD_AR = $(BIN_VENDOR_AR)
endif
ifeq ($(BIN_KERNMOD_STRIP),)
  # Solaris kernel modules should NOT be striped!
  BIN_KERNMOD_STRIP = $(BIN_TRUE)
endif

ifeq ($(FLAGS_KERNMOD_CC),)
  FLAGS_KERNMOD_CC = -Xa -v -D_KERNEL
  #
  # Any multi-ABI-capable OS (i.e. >= sol7) should define this
  #
  ifneq "$(BS_OS_REVMAJOR).$(BS_OS_REVMINOR)" "5.6"
    FLAGS_KERNMOD_CC += -D_SYSCALL32
  endif
  #
  # 64-bit builds get even more things defined
  #
  ifeq "$(BS_OS_MACHINEINSTSET)" "sparcv9"
    FLAGS_KERNMOD_CC += -xarch=v9 -D_SYSCALL32_IMPL -D_ELF64 -D__sparcv9cpu
  endif
  #
  # Normal Solaris distribution kernels are compied with SYSACCT and
  # C2_AUDIT.  It probably doesn't matter but C2_AUDIT can affect some
  # header files, so we match that behavior.  SYSACCT doesn't touch any
  # header files so we don't bother with it
  #
  FLAGS_KERNMOD_CC += -DC2_AUDIT
endif
ifeq ($(FLAGS_KERNMOD_CC_DEP),)
FLAGS_KERNMOD_CC_DEP = $(FLAGS_VENDOR_CC_DEP)
endif
ifeq ($(FLAGS_KERNMOD_CC_DBG),)
# Enable Solaris kernel's ASSERT() macro
FLAGS_KERNMOD_CC_DBG = -DDEBUG
endif
ifeq ($(FLAGS_KERNMOD_CC_OPT),)
  ifeq "$(BS_OS_MACHINEINSTSET)" "i386"
    # i386 just uses a plain "-O"
    FLAGS_KERNMOD_CC_OPT = -O
  else
    # SPARC has some flags that vary on 32 vs 64-bit builds...
    ifeq "$(BS_OS_MACHINEINSTSET)" "sparcv9"
      FLAGS_KERNMOD_CC_OPT = -xchip=ultra -Wc,-xcode=abs32 -Wc,-Qiselect-regsym=0
    else
      FLAGS_KERNMOD_CC_OPT = -xarch=v7
    endif
    # ...and some that are shared between the two
    FLAGS_KERNMOD_CC_OPT += -xO3 -xspace -W0,-Lt
  endif
endif
ifeq ($(FLAGS_KERNMOD_CC_PROFILE),)
FLAGS_KERNMOD_CC_PROFILE = $(FLAGS_VENDOR_CC_PROFILE)
endif
ifeq ($(FLAGS_KERNMOD_CC_COV),)
FLAGS_KERNMOD_CC_COV = $(FLAGS_VENDOR_CC_COV)
endif
ifeq ($(FLAGS_KERNMOD_CC_NOASSERT),)
# Disable Solaris kernel's ASSERT() macro
FLAGS_KERNMOD_CC_NOASSERT = -UDEBUG
endif
ifeq ($(FLAGS_KERNMOD_CC_REENT),)
FLAGS_KERNMOD_CC_REENT = $(FLAGS_VENDOR_CC_REENT)
endif

ifeq ($(FLAGS_KERNMOD_AS),)
FLAGS_KERNMOD_AS = $(FLAGS_VENDOR_AS)
endif
ifeq ($(FLAGS_KERNMOD_AS_DEP),)
FLAGS_KERNMOD_AS_DEP = $(FLAGS_VENDOR_AS_DEP)
endif
ifeq ($(FLAGS_KERNMOD_AS_DBG),)
FLAGS_KERNMOD_AS_DBG = $(FLAGS_VENDOR_AS_DBG)
endif
ifeq ($(FLAGS_KERNMOD_AS_OPT),)
FLAGS_KERNMOD_AS_OPT = $(FLAGS_VENDOR_AS_OPT)
endif
ifeq ($(FLAGS_KERNMOD_AS_PROFILE),)
FLAGS_KERNMOD_AS_PROFILE = $(FLAGS_VENDOR_AS_PROFILE)
endif
ifeq ($(FLAGS_KERNMOD_AS_COV),)
FLAGS_KERNMOD_AS_COV = $(FLAGS_VENDOR_AS_COV)
endif

ifeq ($(FLAGS_KERNMOD_LD_EXE),)
FLAGS_KERNMOD_LD_EXE = -r
endif
ifeq ($(FLAGS_KERNMOD_LD_EXE_OPT),)
FLAGS_KERNMOD_LD_EXE_OPT = $(FLAGS_VENDOR_LD_EXE_OPT)
endif
ifeq ($(FLAGS_KERNMOD_LD_EXE_DBG),)
FLAGS_KERNMOD_LD_EXE_DBG = $(FLAGS_VENDOR_LD_EXE_DBG)
endif
ifeq ($(FLAGS_KERNMOD_LD_EXE_PROFILE),)
FLAGS_KERNMOD_LD_EXE_PROFILE =
endif
ifeq ($(FLAGS_KERNMOD_LD_EXE_COV),)
FLAGS_KERNMOD_LD_EXE_COV =
endif
ifeq ($(FLAGS_KERNMOD_LD_EXE_LOADLIBS),)
FLAGS_KERNMOD_LD_EXE_LOADLIBS =
endif
ifeq ($(FLAGS_KERNMOD_LD_EXE_LOADLIBS_OPT),)
FLAGS_KERNMOD_LD_EXE_LOADLIBS_OPT = $(FLAGS_VENDOR_LD_EXE_LOADLIBS_OPT)
endif
ifeq ($(FLAGS_KERNMOD_LD_EXE_LOADLIBS_DBG),)
FLAGS_KERNMOD_LD_EXE_LOADLIBS_DBG = $(FLAGS_VENDOR_LD_EXE_LOADLIBS_DBG)
endif
ifeq ($(FLAGS_KERNMOD_LD_EXE_LOADLIBS_PROFILE),)
FLAGS_KERNMOD_LD_EXE_LOADLIBS_PROFILE =
endif
ifeq ($(FLAGS_KERNMOD_LD_EXE_LOADLIBS_COV),)
FLAGS_KERNMOD_LD_EXE_LOADLIBS_COV =
endif

ifeq ($(FLAGS_KERNMOD_LD_INCOBJ),)
FLAGS_KERNMOD_LD_INCOBJ = -r
endif
ifeq ($(FLAGS_KERNMOD_LD_INCOBJ_OPT),)
FLAGS_KERNMOD_LD_INCOBJ_OPT = $(FLAGS_VENDOR_LD_INCOBJ_OPT)
endif
ifeq ($(FLAGS_KERNMOD_LD_INCOBJ_DBG),)
FLAGS_KERNMOD_LD_INCOBJ_DBG = $(FLAGS_VENDOR_LD_INCOBJ_DBG)
endif
ifeq ($(FLAGS_KERNMOD_LD_INCOBJ_PROFILE),)
FLAGS_KERNMOD_LD_INCOBJ_PROFILE =
endif
ifeq ($(FLAGS_KERNMOD_LD_INCOBJ_COV),)
FLAGS_KERNMOD_LD_INCOBJ_COV =
endif
ifeq ($(FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS),)
FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS =
endif
ifeq ($(FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS_OPT),)
FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS_OPT = $(FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_OPT)
endif
ifeq ($(FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS_DBG),)
FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS_DBG = $(FLAGS_VENDOR_LD_INCOBJ_LOADLIBS_DBG)
endif
ifeq ($(FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS_PROFILE),)
FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS_PROFILE =
endif
ifeq ($(FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS_COV),)
FLAGS_KERNMOD_LD_INCOBJ_LOADLIBS_COV =
endif

ifeq ($(FLAGS_KERNMOD_AR_LIB),)
FLAGS_KERNMOD_AR_LIB = $(FLAGS_VENDOR_AR_LIB)
endif
ifeq ($(FLAGS_KERNMOD_AR_LIB_OPT),)
FLAGS_KERNMOD_AR_LIB_OPT = $(FLAGS_VENDOR_AR_LIB_OPT)
endif
ifeq ($(FLAGS_KERNMOD_AR_LIB_DBG),)
FLAGS_KERNMOD_AR_LIB_DBG = $(FLAGS_VENDOR_AR_LIB_DBG)
endif
ifeq ($(FLAGS_KERNMOD_AR_LIB_PROFILE),)
FLAGS_KERNMOD_AR_LIB_PROFILE = $(FLAGS_VENDOR_AR_LIB_PROFILE)
endif
ifeq ($(FLAGS_KERNMOD_AR_LIB_COV),)
FLAGS_KERNMOD_AR_LIB_COV = $(FLAGS_VENDOR_AR_LIB_COV)
endif
ifeq ($(FLAGS_KERNMOD_AR_LIB_LOADLIBS),)
FLAGS_KERNMOD_AR_LIB_LOADLIBS = $(FLAGS_VENDOR_AR_LIB_LOADLIBS)
endif
ifeq ($(FLAGS_KERNMOD_AR_LIB_LOADLIBS_OPT),)
FLAGS_KERNMOD_AR_LIB_LOADLIBS_OPT = $(FLAGS_VENDOR_AR_LIB_LOADLIBS_OPT)
endif
ifeq ($(FLAGS_KERNMOD_AR_LIB_LOADLIBS_DBG),)
FLAGS_KERNMOD_AR_LIB_LOADLIBS_DBG = $(FLAGS_VENDOR_AR_LIB_LOADLIBS_DBG)
endif
ifeq ($(FLAGS_KERNMOD_AR_LIB_LOADLIBS_PROFILE),)
FLAGS_KERNMOD_AR_LIB_LOADLIBS_PROFILE = $(FLAGS_VENDOR_AR_LIB_LOADLIBS_PROFILE)
endif
ifeq ($(FLAGS_KERNMOD_AR_LIB_LOADLIBS_COV),)
FLAGS_KERNMOD_AR_LIB_LOADLIBS_COV = $(FLAGS_VENDOR_AR_LIB_LOADLIBS_COV)
endif

ifeq ($(FLAGS_KERNMOD_STRIP_EXE),)
FLAGS_KERNMOD_STRIP_EXE =
endif
ifeq ($(FLAGS_KERNMOD_STRIP_SHLIB),)
FLAGS_KERNMOD_STRIP_SHLIB =
endif
ifeq ($(FLAGS_KERNMOD_STRIP_LIB),)
FLAGS_KERNMOD_STRIP_LIB =
endif


#
# Purify & Gnu tool chain
#
ifeq ($(BIN_PURIFY_CC),)
BIN_PURIFY_CC=/usr/local/bin/gcc
endif
ifeq ($(BIN_PURIFY_CXX),)
BIN_PURIFY_CXX=/usr/local/bin/g++
endif
ifeq ($(BIN_PURIFY_AS),)
BIN_PURIFY_AS=/usr/local/bin/gcc
endif
ifeq ($(BIN_PURIFY_CPP),)
BIN_PURIFY_CPP=/usr/local/bin/gcc -E
endif
ifeq ($(BIN_PURIFY_LD),)
BIN_PURIFY_LD=/opt/rational/releases/PurifyPlusFamily.2002a.06.00/sun4_solaris2/bin/purify \
	-verbose \
	-cache-dir=./$(BS_ARCH_TARGET_DIR) \
	-exit-status=yes \
	-inuse-at-exit=yes \
	-leaks-at-exit=yes \
	-fds-inuse-at-exit=yes \
	/usr/local/bin/gcc
endif
ifeq ($(BIN_PURIFY_AR),)
BIN_PURIFY_AR=/usr/local/bin/ar
endif
# Don't strip purify builds
ifeq ($(BIN_PURIFY_STRIP),)
BIN_PURIFY_STRIP=$(BIN_TRUE)
endif




ifeq ($(FLAGS_PURIFY_CC),)
FLAGS_PURIFY_CC=-W \
	-Wall \
	-Wcast-qual \
	-Wcast-align \
	-Wpointer-arith \
	-Wsign-compare \
	-Winline \
	-Waggregate-return \
	-Wmissing-prototypes \
	-Wmissing-declarations \
	-Wunused
#	-v \
#	-ftime-report \
#	-fmem-report

endif
ifeq ($(FLAGS_PURIFY_CC_DEP),)
FLAGS_PURIFY_CC_DEP=-MM
endif
ifeq ($(FLAGS_PURIFY_CC_DBG),)
FLAGS_PURIFY_CC_DBG=-g3
endif
ifeq ($(FLAGS_PURIFY_CC_OPT),)
FLAGS_PURIFY_CC_OPT=-O3
endif
ifeq ($(FLAGS_PURIFY_CC_PROFILE),)
FLAGS_PURIFY_CC_PROFILE=-pg
endif
ifeq ($(FLAGS_PURIFY_CC_COV),)
FLAGS_PURIFY_CC_COV=-fprofile-arcs -fmem-report
endif
ifeq ($(FLAGS_PURIFY_CC_NOASSERT),)
FLAGS_PURIFY_CC_NOASSERT=-DNDEBUG
endif
ifeq ($(FLAGS_PURIFY_CC_REENT),)
FLAGS_PURIFY_CC_REENT=-D_REENTRANT
endif


ifeq ($(FLAGS_PURIFY_CXX),)
FLAGS_PURIFY_CXX=-W \
	-Wall \
	-Wcast-qual \
	-Wcast-align \
	-Wpointer-arith \
	-Wsign-compare \
	-Winline \
	-Waggregate-return \
	-Wmissing-prototypes \
	-Wunused
#	-v \
#	-ftime-report \
#	-fmem-report

endif
ifeq ($(FLAGS_PURIFY_CXX_DEP),)
FLAGS_PURIFY_CXX_DEP=-MM
endif
ifeq ($(FLAGS_PURIFY_CXX_DBG),)
FLAGS_PURIFY_CXX_DBG=-g3
endif
ifeq ($(FLAGS_PURIFY_CXX_OPT),)
FLAGS_PURIFY_CXX_OPT=-O3
endif
ifeq ($(FLAGS_PURIFY_CXX_PROFILE),)
FLAGS_PURIFY_CXX_PROFILE=-pg
endif
ifeq ($(FLAGS_PURIFY_CXX_COV),)
FLAGS_PURIFY_CXX_COV=-fprofile-arcs -fmem-report
endif
ifeq ($(FLAGS_PURIFY_CXX_NOASSERT),)
FLAGS_PURIFY_CXX_NOASSERT=-DNDEBUG
endif
ifeq ($(FLAGS_PURIFY_CXX_REENT),)
FLAGS_PURIFY_CXX_REENT=-D_REENTRANT
endif


ifeq ($(FLAGS_PURIFY_AS),)
FLAGS_PURIFY_AS=
endif
ifeq ($(FLAGS_PURIFY_AS_DEP),)
FLAGS_PURIFY_AS_DEP=-MM
endif
ifeq ($(FLAGS_PURIFY_AS_DBG),)
FLAGS_PURIFY_AS_DBG=-g3
endif
ifeq ($(FLAGS_PURIFY_AS_OPT),)
FLAGS_PURIFY_AS_OPT=-O3
endif
ifeq ($(FLAGS_PURIFY_AS_PROFILE),)
FLAGS_PURIFY_AS_PROFILE=
endif
ifeq ($(FLAGS_PURIFY_AS_COV),)
FLAGS_PURIFY_AS_COV=
endif



ifeq ($(FLAGS_PURIFY_LD_EXE),)
FLAGS_PURIFY_LD_EXE=
endif
ifeq ($(FLAGS_PURIFY_LD_EXE_OPT),)
FLAGS_PURIFY_LD_EXE_OPT=
endif
ifeq ($(FLAGS_PURIFY_LD_EXE_DBG),)
FLAGS_PURIFY_LD_EXE_DBG=
endif
ifeq ($(FLAGS_PURIFY_LD_EXE_PROFILE),)
FLAGS_PURIFY_LD_EXE_PROFILE=-pg -ldl
endif
ifeq ($(FLAGS_PURIFY_LD_EXE_COV),)
FLAGS_PURIFY_LD_EXE_COV=
endif
ifeq ($(FLAGS_PURIFY_LD_EXE_LOADLIBS),)
FLAGS_PURIFY_LD_EXE_LOADLIBS=
endif
ifeq ($(FLAGS_PURIFY_LD_EXE_LOADLIBS_OPT),)
FLAGS_PURIFY_LD_EXE_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_PURIFY_LD_EXE_LOADLIBS_DBG),)
FLAGS_PURIFY_LD_EXE_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_PURIFY_LD_EXE_LOADLIBS_PROFILE),)
FLAGS_PURIFY_LD_EXE_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_PURIFY_LD_EXE_LOADLIBS_COV),)
FLAGS_PURIFY_LD_EXE_LOADLIBS_COV=
endif


ifeq ($(FLAGS_PURIFY_LD_SHLIB),)
FLAGS_PURIFY_LD_SHLIB=-fPIC -G -dy
endif
ifeq ($(FLAGS_PURIFY_LD_SHLIB_OPT),)
FLAGS_PURIFY_LD_SHLIB_OPT=
endif
ifeq ($(FLAGS_PURIFY_LD_SHLIB_DBG),)
FLAGS_PURIFY_LD_SHLIB_DBG=
endif
ifeq ($(FLAGS_PURIFY_LD_SHLIB_PROFILE),)
FLAGS_PURIFY_LD_SHLIB_PROFILE=
endif
ifeq ($(FLAGS_PURIFY_LD_SHLIB_COV),)
FLAGS_PURIFY_LD_SHLIB_COV=
endif
ifeq ($(FLAGS_PURIFY_LD_SHLIB_LOADLIBS),)
FLAGS_PURIFY_LD_SHLIB_LOADLIBS=
endif
ifeq ($(FLAGS_PURIFY_LD_SHLIB_LOADLIBS_OPT),)
FLAGS_PURIFY_LD_SHLIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_PURIFY_LD_SHLIB_LOADLIBS_DBG),)
FLAGS_PURIFY_LD_SHLIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_PURIFY_LD_SHLIB_LOADLIBS_PROFILE),)
FLAGS_PURIFY_LD_SHLIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_PURIFY_LD_SHLIB_LOADLIBS_COV),)
FLAGS_PURIFY_LD_SHLIB_LOADLIBS_COV=
endif


ifeq ($(FLAGS_PURIFY_LD_INCOBJ),)
FLAGS_PURIFY_LD_INCOBJ=-Wl,-r
endif
ifeq ($(FLAGS_PURIFY_LD_INCOBJ_OPT),)
FLAGS_PURIFY_LD_INCOBJ_OPT=
endif
ifeq ($(FLAGS_PURIFY_LD_INCOBJ_DBG),)
FLAGS_PURIFY_LD_INCOBJ_DBG=
endif
ifeq ($(FLAGS_PURIFY_LD_INCOBJ_PROFILE),)
FLAGS_PURIFY_LD_INCOBJ_PROFILE=
endif
ifeq ($(FLAGS_PURIFY_LD_INCOBJ_COV),)
FLAGS_PURIFY_LD_INCOBJ_COV=
endif
ifeq ($(FLAGS_PURIFY_LD_INCOBJ_LOADLIBS),)
FLAGS_PURIFY_LD_INCOBJ_LOADLIBS=
endif
ifeq ($(FLAGS_PURIFY_LD_INCOBJ_LOADLIBS_OPT),)
FLAGS_PURIFY_LD_INCOBJ_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_PURIFY_LD_INCOBJ_LOADLIBS_DBG),)
FLAGS_PURIFY_LD_INCOBJ_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_PURIFY_LD_INCOBJ_LOADLIBS_PROFILE),)
FLAGS_PURIFY_LD_INCOBJ_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_PURIFY_LD_INCOBJ_LOADLIBS_COV),)
FLAGS_PURIFY_LD_INCOBJ_LOADLIBS_COV=
endif

ifeq ($(FLAGS_PURIFY_AR_LIB),)
FLAGS_PURIFY_AR_LIB=rc
endif
ifeq ($(FLAGS_PURIFY_AR_LIB_OPT),)
FLAGS_PURIFY_AR_LIB_OPT=
endif
ifeq ($(FLAGS_PURIFY_AR_LIB_DBG),)
FLAGS_PURIFY_AR_LIB_DBG=
endif
ifeq ($(FLAGS_PURIFY_AR_LIB_PROFILE),)
FLAGS_PURIFY_AR_LIB_PROFILE=
endif
ifeq ($(FLAGS_PURIFY_AR_LIB_COV),)
FLAGS_PURIFY_AR_LIB_COV=
endif
ifeq ($(FLAGS_PURIFY_AR_LIB_LOADLIBS),)
FLAGS_PURIFY_AR_LIB_LOADLIBS=
endif
ifeq ($(FLAGS_PURIFY_AR_LIB_LOADLIBS_OPT),)
FLAGS_PURIFY_AR_LIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_PURIFY_AR_LIB_LOADLIBS_DBG),)
FLAGS_PURIFY_AR_LIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_PURIFY_AR_LIB_LOADLIBS_PROFILE),)
FLAGS_PURIFY_AR_LIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_PURIFY_AR_LIB_LOADLIBS_COV),)
FLAGS_PURIFY_AR_LIB_LOADLIBS_COV=
endif


# Don't strip purify builds
ifeq ($(FLAGS_PURIFY_STRIP_EXE),)
FLAGS_PURIFY_STRIP_EXE=
endif
ifeq ($(FLAGS_PURIFY_STRIP_SHLIB),)
FLAGS_PURIFY_STRIP_SHLIB=
endif
ifeq ($(FLAGS_PURIFY_STRIP_LIB),)
FLAGS_PURIFY_STRIP_LIB=
endif



#
# Cross compiler tool chain for Alteon MIPS64 sunos 
#
# Only cross compiling tool chains provide these. These
# allow end point make files to construct platform strings
# approiate to the cross compiler's target platform.
# Really, these have to be specified, since we do not
# have a programatic way of determining what the target
# platform is. (and in the generally cross compiling problem,
# you could be compiling for N platforms on the build host.)
XC_ALTEONMIPS64_SUN_OS_NAME=SunOS
XC_ALTEONMIPS64_SUN_OS_REVMAJOR=5
XC_ALTEONMIPS64_SUN_OS_REVMINOR=8
XC_ALTEONMIPS64_SUN_OS_REVPATCH=-Nortel-Alteon
XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME=sb1sim
XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR=2
XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR=1
XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH=1
XC_ALTEONMIPS64_SUN_OS_MACHINETYPE=mips64
XC_ALTEONMIPS64_SUN_OS_MACHINEPROC=alteon
XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET=mips64

XC_ALTEONMIPS64_SUN_PLATFORM_FULL=$(call BS_FUNC_GEN_PLATFORM_FULL,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_FALLBACK_1=$(call BS_FUNC_GEN_PLATFORM_FALLBACK_1,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_FALLBACK_2=$(call BS_FUNC_GEN_PLATFORM_FALLBACK_2,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_FALLBACK_3=$(call BS_FUNC_GEN_PLATFORM_FALLBACK_3,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_FALLBACK_4=$(call BS_FUNC_GEN_PLATFORM_FALLBACK_4,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_FALLBACK_5=$(call BS_FUNC_GEN_PLATFORM_FALLBACK_5,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_FALLBACK_6=$(call BS_FUNC_GEN_PLATFORM_FALLBACK_6,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_FALLBACK_7=$(call BS_FUNC_GEN_PLATFORM_FALLBACK_7,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))

XC_ALTEONMIPS64_SUN_PLATFORM_LEGACYFALLBACK_1=$(call BS_FUNC_GEN_PLATFORM_LEGACYFALLBACK_1,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_LEGACYFALLBACK_2=$(call BS_FUNC_GEN_PLATFORM_LEGACYFALLBACK_2,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_LEGACYFALLBACK_3=$(call BS_FUNC_GEN_PLATFORM_LEGACYFALLBACK_3,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))
XC_ALTEONMIPS64_SUN_PLATFORM_LEGACYFALLBACK_4=$(call BS_FUNC_GEN_PLATFORM_LEGACYFALLBACK_4,\
	$(XC_ALTEONMIPS64_SUN_OS_NAME),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_REVPATCH),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINEINSTSET),\
	$(XC_ALTEONMIPS64_SUN_OS_MACHINETYPE),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMENAME),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMAJOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVMINOR),\
	$(XC_ALTEONMIPS64_SUN_OS_RUNTIMEREVPATCH))



ifeq ($(BIN_XC_ALTEONMIPS64_SUN_CC),)
BIN_XC_ALTEONMIPS64_SUN_CC=/usr/local/sbtools/sparc-solaris-5.6/mips64-sb1sim-2.1.1/bin/mips64-sb1sim-gcc
endif
ifeq ($(BIN_XC_ALTEONMIPS64_SUN_CXX),)
BIN_XC_ALTEONMIPS64_SUN_CXX=/usr/local/sbtools/sparc-solaris-5.6/mips64-sb1sim-2.1.1/bin/mips64-sb1sim-g++
endif
ifeq ($(BIN_XC_ALTEONMIPS64_SUN_AS),)
BIN_XC_ALTEONMIPS64_SUN_AS=/usr/local/sbtools/sparc-solaris-5.6/mips64-sb1sim-2.1.1/bin/mips64-sb1sim-gcc
endif
ifeq ($(BIN_XC_ALTEONMIPS64_SUN_CPP),)
BIN_XC_ALTEONMIPS64_SUN_CPP=/usr/local/sbtools/sparc-solaris-5.6/mips64-sb1sim-2.1.1/bin/mips64-sb1sim-gcc -E
endif
ifeq ($(BIN_XC_ALTEONMIPS64_SUN_LD),)
BIN_XC_ALTEONMIPS64_SUN_LD=/usr/local/sbtools/sparc-solaris-5.6/mips64-sb1sim-2.1.1/bin/mips64-sb1sim-gcc
endif
ifeq ($(BIN_XC_ALTEONMIPS64_SUN_AR),)
BIN_XC_ALTEONMIPS64_SUN_AR=/usr/local/sbtools/sparc-solaris-5.6/mips64-sb1sim-2.1.1/bin/mips64-sb1sim-ar
endif
ifeq ($(BIN_XC_ALTEONMIPS64_SUN_STRIP),)
BIN_XC_ALTEONMIPS64_SUN_STRIP=/usr/local/sbtools/sparc-solaris-5.6/mips64-sb1sim-2.1.1/bin/mips64-sb1sim-strip
endif


ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CC),)
FLAGS_XC_ALTEONMIPS64_SUN_CC=-DBIG_ENDIAN -DXP_NO_XP_INTTYPES_H -DXP_DEFINE_INTTYPES -DXP_NO_64BIT_INT_SUPPORT -DXP_DEFINE_INT_CONSTANTS -W \
	-Wall \
	-Wcast-qual \
	-Wcast-align \
	-Wpointer-arith \
	-Wsign-compare \
	-Winline \
	-Waggregate-return \
	-Wmissing-prototypes \
	-Wmissing-declarations \
	-Wunused \
	-I/usr/local/sbtools/sparc-solaris-5.6/mips64-sb1sim-2.1.1/mips64-sb1sim/sys-include \
#	-v \
#	-ftime-report \
#	-fmem-report

endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CC_DEP),)
FLAGS_XC_ALTEONMIPS64_SUN_CC_DEP=-MM
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CC_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_CC_DBG=-g3
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CC_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_CC_OPT=-O3
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CC_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_CC_PROFILE=-pg
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CC_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_CC_COV=-fprofile-arcs -ftest-coverage
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CC_NOASSERT),)
FLAGS_XC_ALTEONMIPS64_SUN_CC_NOASSERT=-DNDEBUG
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CC_REENT),)
FLAGS_XC_ALTEONMIPS64_SUN_CC_REENT=-D_REENTRANT
endif

ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CXX),)
FLAGS_XC_ALTEONMIPS64_SUN_CXX=-DBIG_ENDIAN -DXP_NO_XP_INTTYPES_H -DXP_DEFINE_INTTYPES -DXP_NO_64BIT_INT_SUPPORT -DXP_DEFINE_INT_CONSTANTS -W \
	-Wall \
	-Wcast-qual \
	-Wcast-align \
	-Wpointer-arith \
	-Wsign-compare \
	-Winline \
	-Wunused \
	-I/usr/local/sbtools/sparc-solaris-5.6/mips64-sb1sim-2.1.1/mips64-sb1sim/sys-include \
#	-v \
#	-ftime-report \
#	-fmem-report

endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CXX_DEP),)
FLAGS_XC_ALTEONMIPS64_SUN_CXX_DEP=-MM
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CXX_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_CXX_DBG=-g3
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CXX_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_CXX_OPT=-O3
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CXX_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_CXX_PROFILE=-pg
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CXX_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_CXX_COV=-fprofile-arcs -ftest-coverage
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CXX_NOASSERT),)
FLAGS_XC_ALTEONMIPS64_SUN_CXX_NOASSERT=-DNDEBUG
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_CXX_REENT),)
FLAGS_XC_ALTEONMIPS64_SUN_CXX_REENT=-D_REENTRANT
endif

ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AS),)
FLAGS_XC_ALTEONMIPS64_SUN_AS=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AS_DEP),)
FLAGS_XC_ALTEONMIPS64_SUN_AS_DEP=-MM
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AS_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_AS_DBG=-g3 -Wa,--gstabs
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AS_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_AS_OPT=-O3
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AS_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_AS_PROFILE=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AS_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_AS_COV=
endif


ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_OPT=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_DBG=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_PROFILE=-pg -ldl
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_COV=
endif

ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_EXE_LOADLIBS_LOADLIBS_COV=
endif

ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB=-shared
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_OPT=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_DBG=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_PROFILE=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_COV=
endif

ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_SHLIB_LOADLIBS_COV=
endif


ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ=-Wl,-r
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_OPT=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_DBG=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_PROFILE=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_COV=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_LD_INCOBJ_LOADLIBS_COV=
endif

ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB=rc
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_OPT=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_DBG=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_PROFILE=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_COV=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS_OPT),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS_DBG),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS_PROFILE),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS_COV),)
FLAGS_XC_ALTEONMIPS64_SUN_AR_LIB_LOADLIBS_COV=
endif


ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_STRIP_EXE),)
FLAGS_XC_ALTEONMIPS64_SUN_STRIP_EXE=--strip-unneeded
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_STRIP_SHLIB),)
FLAGS_XC_ALTEONMIPS64_SUN_STRIP_SHLIB=--discard-all
endif
ifeq ($(FLAGS_XC_ALTEONMIPS64_SUN_STRIP_LIB),)
FLAGS_XC_ALTEONMIPS64_SUN_STRIP_LIB=--discard-all
endif





#
# tool chain neutral
#

ifeq ($(FLAGS_CC),)
FLAGS_CC=
endif
ifeq ($(FLAGS_CC_DBG),)
FLAGS_CC_DBG=
endif
ifeq ($(FLAGS_CC_OPT),)
FLAGS_CC_OPT=
endif
ifeq ($(FLAGS_CC_PROFILE),)
FLAGS_CC_PROFILE=
endif
ifeq ($(FLAGS_CC_COV),)
FLAGS_CC_COV=
endif
ifeq ($(FLAGS_CC_NOASSERT),)
FLAGS_CC_NOASSERT=
endif
ifeq ($(FLAGS_CC_REENT),)
FLAGS_CC_REENT=
endif


ifeq ($(FLAGS_CXX),)
FLAGS_CXX=
endif
ifeq ($(FLAGS_CXX_DBG),)
FLAGS_CXX_DBG=
endif
ifeq ($(FLAGS_CXX_OPT),)
FLAGS_CXX_OPT=
endif
ifeq ($(FLAGS_CXX_PROFILE),)
FLAGS_CXX_PROFILE=
endif
ifeq ($(FLAGS_CXX_COV),)
FLAGS_CXX_COV=
endif
ifeq ($(FLAGS_CXX_NOASSERT),)
FLAGS_CXX_NOASSERT=
endif
ifeq ($(FLAGS_CXX_REENT),)
FLAGS_CXX_REENT=
endif


ifeq ($(FLAGS_AS),)
FLAGS_AS=
endif
ifeq ($(FLAGS_AS_DBG),)
FLAGS_AS_DBG=
endif
ifeq ($(FLAGS_AS_OPT),)
FLAGS_AS_OPT=
endif
ifeq ($(FLAGS_AS_PROFILE),)
FLAGS_As_PROFILE=
endif
ifeq ($(FLAGS_AS_COV),)
FLAGS_As_COV=
endif


ifeq ($(FLAGS_LD_EXE),)
FLAGS_LD_EXE=
endif
ifeq ($(FLAGS_LD_EXE_OPT),)
FLAGS_LD_EXE_OPT=
endif
ifeq ($(FLAGS_LD_EXE_DBG),)
FLAGS_LD_EXE_DBG=
endif
ifeq ($(FLAGS_LD_EXE_PROFILE),)
FLAGS_LD_EXE_PROFILE=
endif
ifeq ($(FLAGS_LD_EXE_COV),)
FLAGS_LD_EXE_COV=
endif
ifeq ($(FLAGS_LD_EXE_LOADLIBS),)
FLAGS_LD_EXE_LOADLIBS=
endif
ifeq ($(FLAGS_LD_EXE_LOADLIBS_OPT),)
FLAGS_LD_EXE_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_LD_EXE_LOADLIBS_DBG),)
FLAGS_LD_EXE_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_LD_EXE_LOADLIBS_PROFILE),)
FLAGS_LD_EXE_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_LD_EXE_LOADLIBS_COV),)
FLAGS_LD_EXE_LOADLIBS_COV=
endif


ifeq ($(FLAGS_LD_SHLIB),)
FLAGS_LD_SHLIB=
endif
ifeq ($(FLAGS_LD_SHLIB_OPT),)
FLAGS_LD_SHLIB_OPT=
endif
ifeq ($(FLAGS_LD_SHLIB_DBG),)
FLAGS_LD_SHLIB_DBG=
endif
ifeq ($(FLAGS_LD_SHLIB_PROFILE),)
FLAGS_LD_SHLIB_PROFILE=
endif
ifeq ($(FLAGS_LD_SHLIB_COV),)
FLAGS_LD_SHLIB_COV=
endif
ifeq ($(FLAGS_LD_SHLIB_LOADLIBS),)
FLAGS_LD_SHLIB_LOADLIBS=
endif
ifeq ($(FLAGS_LD_SHLIB_LOADLIBS_OPT),)
FLAGS_LD_SHLIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_LD_SHLIB_LOADLIBS_DBG),)
FLAGS_LD_SHLIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_LD_SHLIB_LOADLIBS_PROFILE),)
FLAGS_LD_SHLIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_LD_SHLIB_LOADLIBS_COV),)
FLAGS_LD_SHLIB_LOADLIBS_COV=
endif


ifeq ($(FLAGS_LD_INCOBJ),)
FLAGS_LD_INCOBJ=
endif
ifeq ($(FLAGS_LD_INCOBJ_OPT),)
FLAGS_LD_INCOBJ_OPT=
endif
ifeq ($(FLAGS_LD_INCOBJ_DBG),)
FLAGS_LD_INCOBJ_DBG=
endif
ifeq ($(FLAGS_LD_INCOBJ_PROFILE),)
FLAGS_LD_INCOBJ_PROFILE=
endif
ifeq ($(FLAGS_LD_INCOBJ_COV),)
FLAGS_LD_INCOBJ_COV=
endif
ifeq ($(FLAGS_LD_INCOBJ_LOADLIBS),)
FLAGS_LD_INCOBJ_LOADLIBS=
endif
ifeq ($(FLAGS_LD_INCOBJ_LOADLIBS_OPT),)
FLAGS_LD_INCOBJ_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_LD_INCOBJ_LOADLIBS_DBG),)
FLAGS_LD_INCOBJ_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_LD_INCOBJ_LOADLIBS_PROFILE),)
FLAGS_LD_INCOBJ_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_LD_INCOBJ_LOADLIBS_COV),)
FLAGS_LD_INCOBJ_LOADLIBS_COV=
endif


ifeq ($(FLAGS_AR_LIB),)
FLAGS_AR_LIB=
endif
ifeq ($(FLAGS_AR_LIB_OPT),)
FLAGS_AR_LIB_OPT=
endif
ifeq ($(FLAGS_AR_LIB_DBG),)
FLAGS_AR_LIB_DBG=
endif
ifeq ($(FLAGS_AR_LIB_PROFILE),)
FLAGS_AR_LIB_PROFILE=
endif
ifeq ($(FLAGS_AR_LIB_COV),)
FLAGS_AR_LIB_COV=
endif
ifeq ($(FLAGS_AR_LIB_LOADLIBS),)
FLAGS_AR_LIB_LOADLIBS=
endif
ifeq ($(FLAGS_AR_LIB_LOADLIBS_OPT),)
FLAGS_AR_LIB_LOADLIBS_OPT=
endif
ifeq ($(FLAGS_AR_LIB_LOADLIBS_DBG),)
FLAGS_AR_LIB_LOADLIBS_DBG=
endif
ifeq ($(FLAGS_AR_LIB_LOADLIBS_PROFILE),)
FLAGS_AR_LIB_LOADLIBS_PROFILE=
endif
ifeq ($(FLAGS_AR_LIB_LOADLIBS_COV),)
FLAGS_AR_LIB_LOADLIBS_COV=
endif




ifeq ($(FLAGS_VENDOR_STRIP_EXE),)
FLAGS_STRIP_EXE=
endif
ifeq ($(FLAGS_VENDOR_STRIP_SHLIB),)
FLAGS_STRIP_SHLIB=
endif
ifeq ($(FLAGS_VENDOR_STRIP_LIB),)
FLAGS_STRIP_LIB=
endif

